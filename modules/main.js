// Generated by CoffeeScript 1.6.2
/*
// ==UserScript==
// @name        mv-power-tools
// @namespace   santialbo/mv-power-tools
// @version     0
// @description Adds extra features for mediavida.com
// @grant       GM_addStyle
// @include     http://www.mediavida.com/*
// @require     http://code.jquery.com/jquery-1.10.1.min.js
// @require     http://cdn.jsdelivr.net/tipsy/1.0/javascripts/jquery.tipsy.js
// @require     http://cdn.craig.is/js/mousetrap/mousetrap.min.js
// @require     http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.4/underscore-min.js
// ==/UserScript==
*/


(function() {
  var Module, ModuleScope, PT, PowerTools, module, scope, scopes,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  PowerTools = (function() {
    function PowerTools() {
      this.init = __bind(this.init, this);
    }

    PowerTools.prototype.version = 1;

    PowerTools.prototype.modules = [];

    PowerTools.prototype.events = {};

    PowerTools.prototype.settings = {};

    PowerTools.prototype.register = function(module) {
      return this.modules.push(module);
    };

    PowerTools.prototype.init = function() {
      return _.each(this.modules, function(module) {
        if (module.active && module.scope.active()) {
          module.init();
          return module.on();
        }
      });
    };

    PowerTools.prototype.bind = function(event, callback) {
      /* Bind event to given callback
      */
      if (this.events[event]) {
        return this.events[event] = [callback];
      } else {
        return this.events[event].push(callback);
      }
    };

    PowerTools.prototype.raise = function(event, e) {
      /* Raises the specified event
      */
      return _.each(events[event], function(f) {
        return f(e);
      });
    };

    return PowerTools;

  })();

  Module = (function() {
    function Module(title, description, scope, init, _on, _off) {
      this.title = title;
      this.description = description;
      this.scope = scope;
      this.init = init;
      this.active = true;
      this.on = function() {
        this.active = true;
        return _on();
      };
      this.off = function() {
        this.active = false;
        return _off();
      };
    }

    return Module;

  })();

  scopes = {
    'all': function() {
      return true;
    },
    'portada': function() {
      return document.URL.match(/mediavida\.com(\/)?(p\d+)$/) !== null;
    },
    'forum': function() {
      return document.URL.match(/\/foro\/[^\/]+(\/p\d+)?$/) !== null;
    },
    'thread': function() {
      return document.URL.match(/\/foro\/[^\/]+\/[^\/]+(\/\d+)?(#\d+)?$/) !== null;
    }
  };

  ModuleScope = (function() {
    function ModuleScope(pages, regex) {
      this.pages = pages;
      this.regex = regex;
    }

    ModuleScope.prototype.active = function() {
      return _.any(this.pages, function(p) {
        return scopes[p]();
      }) || _.any(this.regex, function(r) {
        return document.URL.match(r) !== null;
      });
    };

    return ModuleScope;

  })();

  PT = new PowerTools;

  $(PT.init);

  scope = new ModuleScope(['thread']);

  module = new Module('modulo', 'desc', scope, (function() {
    return console.log('init');
  }), (function() {
    return console.log('on');
  }), (function() {
    return console.log('off');
  }));

  PT.register(module);

}).call(this);
